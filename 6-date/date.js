// Работа с датой. экземпляр класса Date

// ======================================================= Инициализация Date =======================================================

// === 1. ===
// Строковое значение даты

let date1 = new Date('2023-01-20 9:30:00 GMT') // по гринвичу + GMT
console.log(date1); // 2023-01-20T09:30:00.000Z


// --- Текущий момент времени
// let date = new Date()  -  Возврашает ДАТУ текушего момента времени
// console.log(date); -> 2024-01-16 T 10:59:36.736Z

// let num = Date.now() - возвращает количество пройденных милисекунд с 1970 года
// до текушего момента времени




// ----------------------------------------------


// === 2. ===
// Отдельные компоненты числового типа
// месяц нужно указывать с 0 для того чтобы покозал январь !
let date2 = new Date(2024,0,20,9,30)
console.log(date2);


// ----------------------------------------------

// === 3. ===
let date3 = new Date(0)
console.log(date3); // 1970-01-01T00:00:00.000Z -> время числа первых девайсов



// ---------------------------------------------- 

// === 4. ===
// --- Количнство милисекунд с 1 января 1970 года
let date4 = new Date(3632319940201) // 2085-02-06T17:45:40.201Z
console.log(date4);

// --- 2000 год используя 3 подход (2000-01-01T00:00:00.000Z)
let date5 = new Date((1000 * 60 * 60 * 24 * 365 * 30) + (1000 * 60 * 60 * 24 * 7))
console.log(date5);


// ======================================================= date.getDate/Month/Minutes... =======================================================

// --- Метод,которые позволяют получить любой компонент даты
// Методы возвращают числовое значение
let date6 = new Date('2024-01-20 9:30:00')
console.log(date6.getFullYear()); // 2024
console.log(date6.getMonth()); // 0 = Januar
console.log(date6.getDate()); // 20


// --- время
console.log(date6.getHours()); // 9
console.log(date6.getMinutes()); // 30
console.log(date6.getSeconds()); // 0
console.log(date6.getMilliseconds()); // 0


// --- getTime() - метод возвращает 
console.log(date6.getTime()); // количество пройденых милисекуддах с 1970 до указанной по обекции даты
// 1705739400000



// --- День недели (показывается через индекс)
console.log(date6.getDay()); // 6 

// 0 - Воскресенье
// 1 - Понедельник
// 2 - Вторник
// 3 - Среда
// 4 - Четверг
// 5 - Пятница
// 6 - Суббота

// ======================================================= set.FullYear/Month/Minutes... =====================================================

// Методы, которые позволяют удобно изменить компнент существующей даты
// Методы мутируют дату

let date12 = new Date('2024-01-20 9:30:00')

date12.setFullYear(2025)
date12.setMonth(5)
date12.setDate(15)

// --- время
date12.setHours(15)
date12.setMinutes(0)
date12.setSeconds(55)
date12.setMilliseconds(345)

console.log(date12)

// ----------------------------------------
// --- Из даты в строку

let date13 = new Date('2024-01-20 9:30:00')

console.log(date13.toLocaleDateString())   // Дата            -   1/20/2024
console.log(date13.toLocaleTimeString())  //  Время           -   9:30:00 AM
console.log(date13.toLocaleString())      //  Дата и время    -   1/20/2024, 9:30:00 AM


// ----------------------------------------
// Настройка локализации и формата даты
let date14 = new Date('2024-01-20 9:30:00')

let dateString = date14.toLocaleString('ru-RU', {
    year: '2-digit',
    month: 'long',
    day: '2-digit',

    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'

})  

console.log(dateString) 



// ===================================================================== Задачи =================================================================================


// ============ Задача 1. ============
// Напишите функцию getWeekDay(), которая в зависимости от даты 
// (текущего момента времени) в консоль выводит день недели согласно результату

// Пример:
// getWeekDay()

// Результат:
// 'Сегодня вторник'

function getWeekDay() {
    let daysOfWeek = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];

    let week = new Date();
    let dayIndex = week.getDay();

    console.log(`Сегодня ${daysOfWeek[dayIndex]}`);

    // console.log(`Сегодня ${daysOfWeek[week.getDay()]}`);
}
getWeekDay();



// ============ Задача 2. ============
// Определите количество ЧАСОВ которые прошли с 1970 года до текущего момента времени.
// Примечание: полученное значение округлите по правилам математики.
let currentTime = Date.now() // вывод милисикунд
let countHours = Math.round(currentTime / 3600000) // 1000 * 60 * 60  / Math.round округление числа
console.log(countHours);


// в милисикундах
// 1000 milsec * 60min = 1h 
// 1000 milsec * 60min * 60 = 1day
// = 3.600.000
// 3.600.000 * 24 month = 86.400.000 


// ============ Задача 3 ============ 
// Какое количество дней прошло с начала 2000 года до текущего момент времени?
// Примечание: полученное значение округлите по правилам математики
let date7 = new Date(2000, 0)

let countDays = Math.round((Date.now() - date7.getTime()) / (3600000 * 24))
console.log(countDays);

// mils (1970 - 2000) / сутки => 10900




// ============ Задача 4. ============
// Напишите функцию checkYear(date), которая получает дату (объект) и проверяет, является ли год в дате високосным. 
// Если да - функция должна вернуть true, в противном случае false
// примечание високосный год - это год который делится на 4 без остатка и кратны 400 и 100
let date8 = new Date();

function checkYear(date8) {

    let year = date8.getFullYear();
    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)

    // if ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) {
    //     return true; // Високосный год
    // } else {
    //     return false; // Невисокосный год
    // }
}
console.log(checkYear(date8));




